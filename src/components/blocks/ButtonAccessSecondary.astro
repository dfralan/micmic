---
interface Props {
        href?: string
        customClass?: string
        id?: string
        customType?: string
		target?: string
}

const { href, id, customType, target, customClass, ...props } = Astro.props;
const defaultClass = "bg-transparent hover:bg-orange-600 text-orange-500 hover:text-white py-2 px-4 border border-orange-600 hover:border-transparent rounded-xl transition-all duration-300"
const buttonType = (href ? "link" : (customType ?? "button")) as ("submit" | "reset" | "button");


//const { pathname } = Astro.url;
//const subpath = pathname.match(/[^\/]+/g);
//const isActive = href === pathname || href === '/' + subpath?.[0];
---

{
	href ?
	<a target={target} href={href} id={id} class:list={[defaultClass, customClass]} {...props}>
		<slot />
	</a> :
	<button type={buttonType} id={id} class:list={[defaultClass, customClass]} {...props}>
		<slot />
	</button>

}